# Generated by Django 5.0 on 2024-11-25 18:17

import clubes.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('parametros', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Socio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=150)),
                ('apellido', models.CharField(max_length=200)),
                ('fecha_nacimiento', models.DateField()),
                ('nro_documento', models.CharField(max_length=15, unique=True)),
                ('grupo_familiar', models.CharField(blank=True, max_length=20, null=True)),
                ('CUIL', models.CharField(max_length=11, unique=True, validators=[clubes.validators.validar_cuit])),
                ('direccion', models.CharField(max_length=250)),
                ('nro_telefono', models.CharField(max_length=15)),
                ('email_socio', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('usa_email', models.BooleanField(verbose_name='Usa email?')),
                ('activo', models.BooleanField(default=True)),
                ('fecha_ingreso', models.DateField()),
                ('fecha_egreso', models.DateField(blank=True, null=True)),
                ('responsable', models.CharField(blank=True, max_length=250, null=True)),
                ('tel_responsable', models.CharField(blank=True, max_length=15, null=True)),
                ('email_responsable', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('cobertura', models.CharField(blank=True, max_length=250, null=True)),
                ('nro_cobertura', models.CharField(blank=True, max_length=20, null=True)),
                ('medico', models.CharField(blank=True, max_length=250, null=True)),
                ('peso', models.FloatField(verbose_name='Peso (Kg)')),
                ('altura', models.FloatField(verbose_name='Altura (Metros)')),
                ('enfermedades_huesos', models.BooleanField(default=False)),
                ('enfermedades_nerviosas', models.BooleanField(default=False)),
                ('enfermedades_digestivas', models.BooleanField(default=False)),
                ('a√±o_escolar', models.IntegerField(blank=True, null=True)),
                ('turno_escolar', models.CharField(blank=True, max_length=10, null=True)),
                ('tipo_contacto_escolar', models.CharField(blank=True, max_length=15, null=True)),
                ('nombre_contacto_escolar', models.CharField(blank=True, max_length=20, null=True)),
                ('telefono_contacto_escolar', models.CharField(blank=True, max_length=20, null=True)),
                ('email_contacto_escolar', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('alergias', models.ManyToManyField(blank=True, to='parametros.alergia')),
                ('ciudad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametros.ciudad')),
                ('dificultades', models.ManyToManyField(blank=True, to='parametros.dificultad')),
                ('enfermedades_cronicas', models.ManyToManyField(blank=True, to='parametros.enfermedadcronica')),
                ('enfermedades_infancia', models.ManyToManyField(blank=True, to='parametros.enfermedadinfancia')),
                ('escuela', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='parametros.escuela')),
                ('genero', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametros.genero')),
                ('grupo_sanguineo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametros.gruposanguineo')),
                ('medicaciones', models.ManyToManyField(blank=True, to='parametros.medicacion')),
                ('tipo_documento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametros.tipodocumento')),
                ('tipo_socio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametros.tiposocio')),
                ('vacunas', models.ManyToManyField(blank=True, to='parametros.vacuna')),
            ],
            options={
                'verbose_name': 'Socio',
                'verbose_name_plural': 'Socios',
                'ordering': ['fecha_ingreso'],
            },
        ),
    ]
